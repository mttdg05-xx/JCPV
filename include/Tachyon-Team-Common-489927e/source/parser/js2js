#! /bin/sh

# _________________________________________________________________________
#
#             Tachyon : A Self-Hosted JavaScript Virtual Machine
#
#
#  This file is part of the Tachyon JavaScript project. Tachyon is
#  distributed at:
#  http://github.com/Tachyon-Team/Tachyon
#
#
#  Copyright (c) 2011, Universite de Montreal
#  All rights reserved.
#
#  This software is licensed under the following license (Modified BSD
#  License):
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are
#  met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#    * Neither the name of the Universite de Montreal nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
#  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL UNIVERSITE DE
#  MONTREAL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
#  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# _________________________________________________________________________


OPT_PROFILE=""
OPT_NAMESPACE=""
OPT_EXPORTS=""
OPT_DEBUG=""
OPT_WARN=""
OPT_AST=""
OPT_JS=""
LAST_FILE=""
FILES=""

DIR=`dirname $0`

JS2JS="d8 $DIR/../utility/debug.js $DIR/../utility/system.js $DIR/../utility/hashmap.js $DIR/../utility/num.js $DIR/misc.js $DIR/scanner.js $DIR/parser.js $DIR/pp.js $DIR/ast-passes.js $DIR/js2js.js --"

# After a "make boostrap" this can be used instead:
#
#JS2JS="$DIR/js2js.js.exe"

while [ "$1" != "" ]; do
  case "$1" in
    "-profile") OPT_PROFILE="-profile" ;;
  "-namespace") shift
                OPT_NAMESPACE="-namespace $1" ;;
     "-export") shift
                OPT_EXPORTS="$OPT_EXPORTS -export $1" ;;
      "-debug") OPT_DEBUG="-debug" ;;
       "-warn") OPT_WARN="-warn" ;;
        "-ast") OPT_AST="-ast" ;;
         "-js") OPT_JS="-js" ;;
         "-raw") OPT_RAW="-raw" ;;
          "--") shift
                break ;;
          *.js) LAST_FILE="$1"
                FILES="$FILES $LAST_FILE"
                ;;
             *) echo "Usage: $0 [-profile|-namespace <ns>|-export <id>|-debug|-warn|-ast|-js|-raw] file1.js file2.js ..."
                exit 1
                ;;
  esac
  shift
done

if [ "$OPT_AST" != "" ]; then
  if ! $JS2JS $OPT_PROFILE $OPT_NAMESPACE $OPT_EXPORTS $OPT_DEBUG $OPT_WARN $OPT_RAW -ast -nojs $FILES; then
    exit 1
  fi
else
  if ! $JS2JS $OPT_PROFILE $OPT_NAMESPACE $OPT_EXPORTS $OPT_DEBUG $OPT_WARN $OPT_RAW $FILES < /dev/null > $LAST_FILE.js; then
    cat "$LAST_FILE.js"
    rm -f "$LAST_FILE.js"
    exit 1
  fi
  if [ "$OPT_JS" == "" ]; then
    cat "$LAST_FILE.js"
    rm -f "$LAST_FILE.js"
  fi
fi
