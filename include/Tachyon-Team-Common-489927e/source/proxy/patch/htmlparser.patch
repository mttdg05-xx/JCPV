diff -ur a/node_modules/jsdom/node_modules/htmlparser/lib/htmlparser.js b/node_modules/jsdom/node_modules/htmlparser/lib/htmlparser.js
--- a/node_modules/jsdom/node_modules/htmlparser/lib/htmlparser.js	2011-11-05 17:56:01.000000000 -0400
+++ b/node_modules/jsdom/node_modules/htmlparser/lib/htmlparser.js	2011-11-05 16:53:31.000000000 -0400
@@ -174,6 +174,14 @@
 
 	//Takes an element and adds an "attribs" property for any element attributes found 
 	Parser.prototype.parseAttribs = function Parser$parseAttribs (element) {
+                function setAttrib(dict, name, value) {
+                    if (name === "style" && value[value.length - 1] === ':') {
+                        value = value + "0"; // BD - Kludge (remove this!)
+                    }
+                    if (!dict.hasOwnProperty(name)) {
+                        dict[name] = value;
+                    }
+                }
 		//Only parse attributes for tags
 		if (element.type != ElementType.Script && element.type != ElementType.Style && element.type != ElementType.Tag)
 			return;
@@ -189,14 +197,16 @@
 			if (element.attribs == undefined)
 				element.attribs = {};
 	
+
+                        // BD - Modified to match browser implementations: discard repeated attributes
 			if (typeof match[1] == "string" && match[1].length) {
-				element.attribs[match[1]] = match[2];
+				setAttrib(element.attribs, match[1], match[2]);
 			} else if (typeof match[3] == "string" && match[3].length) {
-				element.attribs[match[3].toString()] = match[4].toString();
+				setAttrib(element.attribs, match[3].toString(), match[4].toString());
 			} else if (typeof match[5] == "string" && match[5].length) {
-				element.attribs[match[5]] = match[6];
+				setAttrib(element.attribs, match[5], match[6]);
 			} else if (typeof match[7] == "string" && match[7].length) {
-				element.attribs[match[7]] = match[7];
+				setAttrib(element.attribs, match[7], match[7]);
 			}
 		}
 	}
